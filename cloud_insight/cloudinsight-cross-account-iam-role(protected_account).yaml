AWSTemplateFormatVersion: 2010-09-09
Description: Alert Logic Cross-Account Role for Cloud Insight. Creates IAM role/policy.
Parameters:
  AlertLogicDatacenter:
    Description: Alert Logic Datacenter into which your account was deployed.
    AllowedValues:
      - US
      - EU
    Default: US
    Type: String
  ExternalID:
    Description: >-
      A unique identifier that is used by AlertLogic when assuming roles in the
      account. This is entered into the Alert Logic Portal later on. More
      information can be found on the following page in AWS's IAM Documentation:
      http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html
    AllowedPattern: '[\w+=,.@:\/-]*'
    ConstraintDescription: >-
      The format for this parameter is a string of characters consisting of
      2-1224 upper and lower case alphanumeric characters with no spaces. You
      can also include underscores or any of the following characters: =,.@:\/-
    MinLength: 2
    MaxLength: 1224
    Type: String
    NoEcho: "true"
  KMSKey:
    Description: >-
      ARN of the KMS key used to encrypt the CloudTrail. If you use centralized CloudTrail,
      enter the KMS key on the centralized role CFT instead of in this CFT.
    Type: String
    Default: ""
Mappings:
  AlertLogic:
    Datacenter:
      US: "arn:aws:iam::733251395267:root"
      EU: "arn:aws:iam::857795874556:root"
Conditions:
  NoKMS: !Equals
    - ""
    - !Ref KMSKey
Resources:
  AlertLogicRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                "sts:ExternalId": !Ref ExternalID
            Effect: Allow
            Principal:
              AWS:
                - !FindInMap
                  - AlertLogic
                  - Datacenter
                  - !Ref AlertLogicDatacenter
            Sid: ""
        Version: 2012-10-17
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - autoscaling:Describe*
                  - cloudformation:DescribeStack*
                  - cloudformation:GetTemplate
                  - cloudformation:ListStack*
                  - cloudfront:Get*
                  - cloudfront:List*
                  - cloudtrail:DescribeTrails
                  - cloudtrail:GetTrailStatus
                  - cloudtrail:ListTags
                  - cloudtrail:LookupEvents
                  - cloudwatch:Describe*
                  - config:DeliverConfigSnapshot
                  - config:Describe*
                  - config:Get*
                  - config:ListDiscoveredResources
                  - cur:DescribeReportDefinitions
                  - directconnect:Describe*
                  - dynamodb:ListTables
                  - ec2:Describe*
                  - elasticbeanstalk:Describe*
                  - elasticache:Describe*
                  - elasticloadbalancing:Describe*
                  - elasticmapreduce:DescribeJobFlows
                  - events:Describe*
                  - events:List*
                  - glacier:ListVaults
                  - guardduty:Get*
                  - guardduty:List*
                  - kinesis:Describe*
                  - kinesis:List*
                  - kms:DescribeKey
                  - kms:GetKeyPolicy
                  - kms:GetKeyRotationStatus
                  - kms:ListAliases
                  - kms:ListGrants
                  - kms:ListKeys
                  - kms:ListKeyPolicies
                  - kms:ListResourceTags
                  - lambda:List*
                  - logs:Describe*
                  - rds:Describe*
                  - rds:ListTagsForResource
                  - redshift:Describe*
                  - route53:GetHostedZone
                  - route53:ListHostedZones
                  - route53:ListResourceRecordSets
                  - sdb:DomainMetadata
                  - sdb:ListDomains
                  - sns:ListSubscriptions
                  - sns:ListSubscriptionsByTopic
                  - sns:ListTopics
                  - sns:GetEndpointAttributes
                  - sns:GetSubscriptionAttributes
                  - sns:GetTopicAttributes
                  - s3:ListAllMyBuckets
                  - s3:ListBucket
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:GetBucket*
                  - s3:GetLifecycleConfiguration
                  - s3:GetObjectAcl
                  - s3:GetObjectVersionAcl
                  - tag:GetResources
                  - tag:GetTagKeys
                Effect: Allow
                Resource: "*"
                Sid: EnabledDiscoveryOfVariousAWSServices
              - Action:
                  - iam:Get*
                  - iam:List*
                  - iam:ListRoles
                  - iam:GetRolePolicy
                  - iam:GetAccountSummary
                  - iam:GenerateCredentialReport
                Effect: Allow
                Resource: "*"
                Sid: EnableInsightDiscovery
              - Action:
                  - cloudtrail:*
                Effect: Allow
                Resource: "*"
                Sid: EnableCloudTrailIfAccountDoesntHaveCloudTrailsEnabled
              - Action:
                  - s3:CreateBucket
                  - s3:PutBucketPolicy
                  - s3:DeleteBucket
                Effect: Allow
                Resource: arn:aws:s3:::outcomesbucket-*
                Sid: CreateCloudTrailS3BucketIfCloudTrailsAreBeingSetupByAlertLogic
              - Action:
                  - sns:CreateTopic
                  - sns:DeleteTopic
                Effect: Allow
                Resource: arn:aws:sns:*:*:outcomestopic
                Sid: CreateCloudTrailsTopicTfOneWasntAlreadySetupForCloudTrails
              - Action:
                  - sns:addpermission
                  - sns:gettopicattributes
                  - sns:listtopics
                  - sns:settopicattributes
                  - sns:subscribe
                Effect: Allow
                Resource: arn:aws:sns:*:*:*
                Sid: MakeSureThatCloudTrailsSnsTopicIsSetupCorrectlyForCloudTrailPublishingAndSqsSubsription
              - Action:
                  - sqs:CreateQueue
                  - sqs:DeleteQueue
                  - sqs:SetQueueAttributes
                  - sqs:GetQueueAttributes
                  - sqs:ListQueues
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueUrl
                Effect: Allow
                Resource: arn:aws:sqs:*:*:outcomesbucket*
                Sid: CreateAlertLogicSqsQueueToSubscribeToCloudTrailsSnsTopicNotifications
              - Action:
                  - ec2:CreateTags
                  - ec2:CreateSubnet
                  - ec2:CreateInternetGateway
                  - ec2:AttachInternetGateway
                  - ec2:CreateRoute
                  - ec2:CreateRouteTable
                  - ec2:AssociateRouteTable
                  - ec2:CreateSecurityGroup
                  - ec2:CreateKeyPair
                  - ec2:ImportKeyPair
                  - ec2:CreateNetworkAcl
                  - ec2:CreateNetworkAclEntry
                  - ec2:ReplaceNetworkAclAssociation
                  - ec2:DeleteNetworkAcl
                  - ec2:DeleteRoute
                Effect: Allow
                Resource: "*"
                Sid: EnableAlertLogicSecurityInfrastructureDeployment
              - Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                  - ec2:DeleteSecurityGroup
                  - ec2:DeleteNetworkAclEntry
                  - ec2:DeleteRouteTable
                Condition:
                  StringEquals:
                    ec2:ResourceTag/AlertLogic: Security
                Effect: Allow
                Resource:
                  - arn:aws:ec2:*:*:security-group/*
                  - arn:aws:ec2:*:*:route-table/*
                  - arn:aws:ec2:*:*:network-acl/*
                Sid: ModifyNetworkSettingsToEnableNetworkVisibilityFromAlertLogicSecurityAppliance
              - Action:
                  - ec2:DeleteSubnet
                Effect: Allow
                Resource: "*"
                Sid: DeleteSecuritySubnet
              - Action:
                  - ec2:RunInstances
                Effect: Allow
                Resource:
                  - arn:aws:ec2:*:*:instance/*
                  - arn:aws:ec2:*:*:volume/*
                  - arn:aws:ec2:*:*:network-interface/*
                  - arn:aws:ec2:*:*:key-pair/*
                  - arn:aws:ec2:*:*:security-group/*
                Sid: EnsureThatAlertLogicApplianceCanCreateNecessaryResources
              - Action:
                  - ec2:TerminateInstances
                  - ec2:StartInstances
                  - ec2:StopInstances
                Condition:
                  StringEquals:
                    ec2:ResourceTag/AlertLogic: Security
                Effect: Allow
                Resource: arn:aws:ec2:*:*:instance/*
                Sid: EnabletAlertLogicApplianceStateManagement
              - Action:
                  - autoscaling:CreateLaunchConfiguration
                  - autoscaling:DeleteLaunchConfiguration
                  - autoscaling:CreateAutoScalingGroup
                  - autoscaling:UpdateAutoScalingGroup
                  - autoscaling:DeleteAutoScalingGroup
                Effect: Allow
                Resource: "*"
                Sid: EnableAlertLogicAutoScalingGroup
              - Action:
                  - iam:CreateServiceLinkedRole
                Effect: Allow
                Resource: arn:aws:iam::*:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling*
                Sid: EnableCreationOfServiceLinkedRoleForAutoscaling
              - Action: kms:Decrypt
                Sid: AllowDecryptOfCloudTrailKey
                Effect: Allow
                Resource:
                  !If [
                    NoKMS,
                    "arn:aws:kms:*:*:key/nonexistent_key",
                    !Ref KMSKey,
                  ]
            Version: "2012-10-17"
          PolicyName: alertlogic-cloudinsight-iam-policy
    Type: "AWS::IAM::Role"
Outputs:
  ExternalID:
    Description: External ID used by Alert Logic to assume your new Cross-Account IAM role.
    Value: !Ref ExternalID
  RoleARN:
    Description: Amazon Resource Name of your new Cross-Account IAM Role.
    Value: !GetAtt
      - AlertLogicRole
      - Arn
