AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Alert Logic Log Collection Role for collecting encrypted CloudTrail and S3 logs (optional, modify the created IAM policy with resource ARN of s3 bucket to collect the logs from). Creates and implements IAM role and policy, S3 bucket for collecting cloudtrail logs and associate s3 policy, enables Cloudtrail and publish to a new created SNS topic.
Parameters:
  ExternalId:
    Description: >-
      Your Alert Logic account ID.
    MinLength: "2"
    Type: String
    NoEcho: "true"
  AlertLogicDatacenter:
    AllowedValues:
      - US
      - EU
    Type: String
    Default: US
    Description: >-
      Please consult your Onboarding Project Manager or Onboarding Engineer if unsure.
  ExistingS3Bucket:
    Description: >-
      Name of an existing S3 bucket where CloudTrail is currenlty enabled and writing logs into.
    Type: String
  ExistingSNSTopic:
    Description: >-
      ARN of an existing CloudTrail topic to subscribe SQS to. Create the stack in the region where the SNS Topic exists.
    Type: String
  QueueName:
    Description: >-
      Name of the SQS Queue to create. CloudTrail's SNS Topic will Send Messages to this Queue and LogManager will Receive Messages from it.
    Type: String
    Default: alertlogic-cloudtrail-sqs-queue
  OutcomesSqsQueue:
    Description: >-
      If a discovery outcomes SQS queue should be created for the deployment (Optional).
    Type: String
    AllowedValues:
      - true
      - false
    Default: false
  KMSKey:
    Description: ARN of the KMS key used to encrypt the CloudTrail
    Type: String
    Default: ""
Conditions:
  CreateCloudTrail: !Equals
    - ""
    - !Ref ExistingS3Bucket
  CreateCloudTrailTopic: !Equals
    - ""
    - !Ref ExistingSNSTopic
  CreateOutcomesSqsQueue: !Equals
    - true
    - !Ref OutcomesSqsQueue
  NoKMS: !Equals
    - ""
    - !Ref KMSKey
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: Create Alert Logic IAM Role and Policy (Required)
        Parameters:
          - ExternalId
          - AlertLogicDatacenter
      - Label:
          default: Optional Parameters
        Parameters:
          - ExistingS3Bucket
          - ExistingSNSTopic
    ParameterLabels:
      ExternalId:
        default: "External ID:"
      AlertLogicDatacenter:
        default: "Alert Logic DC where your Account is Deployed in:"
      ExistingS3Bucket:
        default: "S3 bucket name:"
      ExistingSNSTopic:
        default: "SNS topic ARN:"
Mappings:
  AlertLogic:
    Datacenter:
      US: "arn:aws:iam::239734009475:root"
      EU: "arn:aws:iam::239734009475:root"
Resources:
  AlertLogicPolicy:
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: S3AuditLoggingAndLogCollection1
            Effect: Allow
            Action:
              - "s3:GetObject"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !If
                  - CreateCloudTrail
                  - !Ref CloudTrailBucket
                  - !Ref ExistingS3Bucket
                - /*
          - Sid: S3AuditLoggingAndLogCollection2
            Action:
              - "s3:ListBucket"
            Effect: Allow
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !If
                  - CreateCloudTrail
                  - !Ref CloudTrailBucket
                  - !Ref ExistingS3Bucket
          - Sid: ReceiveAndDeleteMessageFromSqsQueue
            Action:
              - "sqs:GetQueueUrl"
              - "sqs:Receivemessage"
              - "sqs:DeleteMessage"
            Effect: Allow
            Resource: !Join
              - ""
              - - "arn:aws:sqs:"
                - !Ref "AWS::Region"
                - ":"
                - !Ref "AWS::AccountId"
                - ":"
                - !GetAtt
                  - CloudTrailSQSQueue
                  - QueueName
          - Sid: AllowDecryptOfCloudTrailKey
            Effect: !If [NoKMS, "Deny", "Allow"]
            Action: kms:Decrypt
            Resource: !If [NoKMS, "arn:aws:kms:*:*:*", !Ref KMSKey]
      Roles:
        - !Ref AlertLogicRole
      PolicyName: alertlogic-log-collection-policy
    Type: "AWS::IAM::Policy"
  CloudTrailTopic:
    Type: "AWS::SNS::Topic"
    Condition: CreateCloudTrailTopic
    Properties:
      DisplayName: Cloud Trail Topic
      TopicName: alertlogic-cloudtrail-sns-topic
  CloudTrailSQSQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: !Ref QueueName
  CloudTrailSQSQueuePolicy:
    Type: "AWS::SQS::QueuePolicy"
    DependsOn:
      - CloudTrailSQSQueue
    Properties:
      Queues:
        - !Ref CloudTrailSQSQueue
      PolicyDocument:
        Version: 2012-10-17
        Id: !Join
          - ""
          - - "arn:aws:sqs:"
            - !Ref "AWS::Region"
            - ":"
            - !Ref "AWS::AccountId"
            - ":"
            - !GetAtt
              - CloudTrailSQSQueue
              - QueueName
            - /SQSDefaultPolicy
        Statement:
          - Sid: Allow-SendMessage-To-Queue-From-SNS-Topic
            Effect: Allow
            Principal:
              AWS: "*"
            Action: "SQS:SendMessage"
            Resource: !GetAtt
              - CloudTrailSQSQueue
              - Arn
            Condition:
              ArnEquals:
                "aws:SourceArn": !If
                  - CreateCloudTrailTopic
                  - !Ref CloudTrailTopic
                  - !Ref ExistingSNSTopic
  TopicSubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      Endpoint: !GetAtt
        - CloudTrailSQSQueue
        - Arn
      Protocol: sqs
      TopicArn: !If
        - CreateCloudTrailTopic
        - !Ref CloudTrailTopic
        - !Ref ExistingSNSTopic
  CloudTrailTopicPolicy:
    DependsOn:
      - CloudTrailTopic
    Type: "AWS::SNS::TopicPolicy"
    Condition: CreateCloudTrailTopic
    Properties:
      Topics:
        - !Ref CloudTrailTopic
      PolicyDocument:
        Statement:
          - Effect: Allow
            Resource: "*"
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: "SNS:Publish"
            Sid: AWSCloudTrailSNSPolicy
        Version: 2008-10-17
  CloudTrailBucket:
    Type: "AWS::S3::Bucket"
    Condition: CreateCloudTrail
    DeletionPolicy: Retain
    Properties:
      BucketName: !Join
        - ""
        - - alertlogic-cloudtrail-
          - !Ref "AWS::AccountId"
  CloudTrailBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Condition: CreateCloudTrail
    Properties:
      Bucket:
        Ref: CloudTrailBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AWSCloudTrailAclCheck"
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:GetBucketAcl"
            Resource: !Sub |-
              arn:aws:s3:::${CloudTrailBucket}
          - Sid: "AWSCloudTrailWrite"
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:PutObject"
            Resource: !Sub |-
              arn:aws:s3:::${CloudTrailBucket}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: "bucket-owner-full-control"
  EnableCloudTrail:
    Type: "AWS::CloudTrail::Trail"
    Condition: CreateCloudTrail
    Properties:
      IsMultiRegionTrail: true
      IncludeGlobalServiceEvents: true
      IsLogging: true
      SnsTopicName: !GetAtt
        - CloudTrailTopic
        - TopicName
      S3BucketName: !Ref CloudTrailBucket
      Tags:
        - Key: Name
          Value: alertlogic-cloudtrail
    DependsOn:
      - CloudTrailTopicPolicy
      - CloudTrailBucketPolicy
  AlertLogicRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: /
      RoleName: alertlogic-log-collection-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !FindInMap
                - AlertLogic
                - Datacenter
                - !Ref AlertLogicDatacenter
            Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                "sts:ExternalId": !Ref ExternalId
  OutcomesSQSQueue:
    Type: "AWS::SQS::Queue"
    Condition: CreateOutcomesSqsQueue
    Properties:
      QueueName: !Join
        - ""
        - - outcomesbucket-
          - !Ref "ExternalId"
  OutcomesSQSQueuePolicy:
    Type: "AWS::SQS::QueuePolicy"
    Condition: CreateOutcomesSqsQueue
    DependsOn:
      - OutcomesSQSQueue
    Properties:
      Queues:
        - !Ref OutcomesSQSQueue
      PolicyDocument:
        Version: 2012-10-17
        Id: !Join
          - ""
          - - "arn:aws:sqs:"
            - !Ref "AWS::Region"
            - ":"
            - !Ref "AWS::AccountId"
            - ":"
            - !GetAtt
              - OutcomesSQSQueue
              - QueueName
            - /SQSDefaultPolicy
        Statement:
          - Sid: Allow-SendMessage-To-Queue-From-SNS-Topic
            Effect: Allow
            Principal:
              AWS: "*"
            Action: "SQS:SendMessage"
            Resource: !GetAtt
              - OutcomesSQSQueue
              - Arn
            Condition:
              ArnEquals:
                "aws:SourceArn": !If
                  - CreateCloudTrailTopic
                  - !Ref CloudTrailTopic
                  - !Ref ExistingSNSTopic
  OutcomesSQSTopicSubscription:
    Type: "AWS::SNS::Subscription"
    Condition: CreateOutcomesSqsQueue
    Properties:
      Endpoint: !GetAtt
        - OutcomesSQSQueue
        - Arn
      Protocol: sqs
      TopicArn: !If
        - CreateCloudTrailTopic
        - !Ref CloudTrailTopic
        - !Ref ExistingSNSTopic
Outputs:
  ExternalId:
    Description: External ID used by Alert Logic to assume your new Cross-Account IAM role.
    Value: !Ref ExternalId
  RoleARN:
    Description: Amazon Resource Name of your new Cross-Account IAM Role.
    Value: !GetAtt
      - AlertLogicRole
      - Arn
  SQSQueueName:
    Description: SQS Queue Name created to recieve notifications of new CloudTrail logs.
    Value: !GetAtt
      - CloudTrailSQSQueue
      - QueueName
